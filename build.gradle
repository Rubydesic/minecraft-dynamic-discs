plugins {
    id "fabric-loom" version "0.11-SNAPSHOT"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "1.4.21"
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin.kotlinOptions.jvmTarget = "1.8"

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    maven { url = "https://jitpack.io" }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    shade('com.github.zakgof:velvet-video:0.5.2') {
        exclude module: "guava"
        exclude group: "org.ow2.asm"
    }
    shade 'com.github.zakgof:velvet-video-natives:0.2.8.full'
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

shadowJar {
    classifier "useless"
    configurations = [project.configurations.shade]
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}